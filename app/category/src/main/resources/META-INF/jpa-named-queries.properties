Category.findHierarchy=\
with recursive CATEGORY_LINK(ID, NAME, PARENT_ID) as ( \
select ID,NAME,PARENT_ID \
from CATEGORY where PARENT_ID is null \
union all \
select c.ID,c.NAME,c.PARENT_ID \
from CATEGORY_LINK cl \
join CATEGORY c on cl.ID = c.PARENT_ID) \
select ID, NAME, PARENT_ID from CATEGORY_LINK \
order by ID
#Category.findCategoriesWithCountOfIncludingItems=\
# with recursive \
#     CategoryStat(category_id, itemCount) \
#         AS (select c.id, \
#                    count(c.id) AS itemCount \
#             from category c \
#                      join category_item ci on c.id = ci.category_id \
#             group by c.id), \
#  \
#     LowestLevelCategory(category_id) \
#         AS (select c1.id \
#             from category c1 \
#                      left outer join category c2 on c1.id = c2.parent_id \
#             where c2.id is null), \
#  \
#     CategoryWithCountCTE(category_id, parent_id, name, itemCount) \
#         AS (select c.id, \
#                    c.parent_id, \
#                    c.name, \
#                    cs.itemCount \
#             from category c \
#                      join CategoryStat cs on c.id = cs.category_id \
#             where c.id IN (select low.category_id from LowestLevelCategory low) \
#\
#             UNION ALL \
#\
#             select c.id, \
#                    c.parent_id, \
#                    c.name, \
#                    cwc.itemCount + \
#                    (select cs.itemCount AS itemCount \
#                     from CategoryStat cs \
#                     where cs.category_id = c.id) \
#             from CategoryWithCountCTE cwc \
#                      join category c on (cwc.parent_id = c.id)) \
#\
# select category_id as id, \
#        parent_id as parentId, \
#        name, \
#        itemCount as numOfItems \
# from CategoryWithCountCTE \
## where (?1 is null or name like ?1 escape '!')



